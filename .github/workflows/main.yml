name: CI

on:
    push:
        branches: [master, main, develop]
    pull_request:
        branches: [develop, master, next, beta, alpha]

permissions:
    packages: write
    contents: write
    issues: write
    pull-requests: write

env:
    PRIMARY_NODE_VERSION: 20
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    install:
        name: Checkout and Install
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install
              uses: ./.github/actions/install
              with:
                  node-version: ${{ env.PRIMARY_NODE_VERSION }}

    lint:
        name: Lint
        needs: [build]
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Install
                uses: ./.github/actions/install
                with:
                    node-version: ${{ env.PRIMARY_NODE_VERSION }}

            -   name: Build
                uses: ./.github/actions/build

            -   name: Lint
                run: |
                    npm run lint

    build:
        name: Build
        needs: [install]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install
              uses: ./.github/actions/install
              with:
                  node-version: ${{ env.PRIMARY_NODE_VERSION }}
            - name: Build
              uses: ./.github/actions/build

#    tests:
#        name: Test
#        needs: [build]
#        runs-on: ubuntu-latest
#        steps:
#            -   name: Checkout
#                uses: actions/checkout@v4
#
#            -   name: Install
#                uses: ./.github/actions/install
#                with:
#                    node-version: ${{ env.PRIMARY_NODE_VERSION }}
#
#            -   name: Build
#                uses: ./.github/actions/build
#
#            -   name: Run tests
#                run: |
#                    npm run test
#
#    release:
#        name: Release
#        needs: [lint, tests]
#        runs-on: ubuntu-latest
#        steps:
#            -   name: Checkout
#                uses: actions/checkout@v4
#
#            -   name: Install
#                uses: ./.github/actions/install
#                with:
#                    node-version: ${{ env.PRIMARY_NODE_VERSION }}
#
#            -   name: Build
#                uses: ./.github/actions/build
#
#            #-   name: Release
#                #env:
#                #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#                #    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#                #
#                # run: npx semantic-release
#
#    coverage:
#        name: Coverage
#        needs: [release]
#        runs-on: ubuntu-latest
#        if: ${{ github.ref_name == 'master' }}
#        steps:
#            -   name: Checkout
#                uses: actions/checkout@v4
#
#            -   name: Install
#                uses: ./.github/actions/install
#                with:
#                    node-version: ${{ env.PRIMARY_NODE_VERSION }}
#
#            -   name: Build
#                uses: ./.github/actions/build
#
#            -   name: Coverage
#                run: |
#                    npm run test:coverage
#
#            #-   name: Upload report
#            #    uses: codecov/codecov-action@v3.1.4
#            #    with:
#            #        token: ${{ secrets.codecov }}
#            #        directory: ./coverage/

    build-and-push-image:
        if: contains(github.event.head_commit.message, 'build_image')
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=sha

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  file: ./Dockerfile.prod
                  tags: ${{ steps.meta.outputs.tags }},ghcr.io/privateaim/node-ui:latest
                  labels: ${{ steps.meta.outputs.labels }}
